openapi: 3.0.3

info:
  title: CodeLabs Main API

  license:
    name: AGPL-3.0
    url: https://github.com/upb-code-labs/main-api/blob/main/LICENSE

  version: 0.1.0

tags:
  - name: Accounts
  - name: Session
  - name: Languages
  - name: Rubrics
  - name: Courses
  - name: Laboratories
  - name: Blocks
  - name: Submissions
  - name: Grades

paths:
  /accounts/admins:
    get:
      tags:
        - Accounts
      security:
        - cookieAuth: []
      description: List the existing admin accounts Note that only accounts with "admin" role are able to list the admin accounts.
      responses:
        "200":
          description: The admin accounts are listed
          content:
            application/json:
              schema:
                type: object
                properties:
                  admins:
                    type: array
                    items:
                      $ref: "#/components/schemas/public_admins_fields"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    post:
      tags:
        - Accounts
      security:
        - cookieAuth: []
      description: Creates a new admin account. Note that only accounts with "admin" role are able to create teacher accounts.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_account_req"
      responses:
        "201":
          description: The account was created successfully.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "409":
          description: There is already another account with the same unique fields.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /accounts/teachers:
    post:
      tags:
        - Accounts
      security:
        - cookieAuth: []
      description: Creates a new teacher account. Note that only accounts with "admin" role are able to create teacher accounts.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_account_req"
      responses:
        "201":
          description: The account was created successfully.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "409":
          description: There is already another account with the same unique fields.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /accounts/students:
    post:
      tags:
        - Accounts
      description: Creates a new student account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_account_req"
      responses:
        "201":
          description: The account was created successfully.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "409":
          description: There is already another account with the same unique fields.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    get:
      tags: 
        - Accounts
      description: Search students by fullname
      parameters: 
        - in: query
          name: fullname
          schema:
            type: string
            example: "Pedro"
          required: true
      responses: 
        "200": 
          description: Students with the given fullname are listed
          content:
            application/json:
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items:
                      $ref: "#/components/schemas/public_student_fields"
        "400":
          description: The required parameter is empty.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /accounts/password:
    patch:
      tags:
        - Accounts
      security:
        - cookieAuth: []
      description: Updates the user's password.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_password_req"
      responses:
        "204":
          description: The password was updated
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "401":
          description: The old password field does not match with the user's password.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /accounts/profile:
    get: 
      tags:
        - Accounts
      security:
        - cookieAuth: []
      description: Get the user's profile. This endpoint is necessary since we do not want to include sensitive data as the user full name and email and keep them in the session when the `/whoami` endpoint is requested. 
      responses:
        "200":
          description: The profile details were obtained. 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/account_profile_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"  
      
    put:
      tags: 
        - Accounts
      security:
        - cookieAuth: []
      description: Updates the user's profile. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_profile_req"
      responses:
        "204":
          description: The profile was updated. 
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "409":
          description: The email or institutional ID are already in use. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"  

  # Session
  /session/login:
    post:
      tags:
        - Session
      description: Login with the given credentials.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/credentials"
      responses:
        "200":
          description: Credentials matched.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "access_token=jwt; HttpOnly"
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    allOf:
                      - $ref: "#/components/schemas/session_user_fields"
        "401":
          description: Bad credentials.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /session/whoami:
    get:
      tags:
        - Session
      security:
        - cookieAuth: []
      description: Get the information of an user from an access token.
      responses:
        "200":
          description: The given token was valid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    allOf:
                      - $ref: "#/components/schemas/session_user_fields"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /session/logout:
    delete:
      tags:
        - Session
      security:
        - cookieAuth: []
      description: Send an expired session cookie from the server to replace and remove the client-side cookie.
      responses:
        "204":
          description: A new cookie header was sent.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: "access_token=expired_jwt; Expires=now; HttpOnly"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  # Courses
  /courses:
    post:
      tags:
        - Courses
      security:
        - cookieAuth: []
      description: Create a new course. Note that only accounts with "teacher" role are able to create new courses.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Estructuras de datos NRC 47158"
      responses:
        "201":
          description: The course was created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/public_course_fields"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    get:
      tags:
        - Courses
      security:
        - cookieAuth: []
      description: Get the courses in which the user is enrolled as a teacher or student.
      responses:
        "200":
          description: The courses were obtained successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      $ref: "#/components/schemas/public_course_fields"
                  hidden_courses:
                    type: array
                    items:
                      $ref: "#/components/schemas/public_course_fields"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /courses/{course_uuid}/invitation-code:
    get:
      tags:
        - Courses
      security:
        - cookieAuth: []
      description: Get the invitation code of the given course. Note that the invitation code of the course can only be obtained by the teacher who created the course.
      parameters:
        - in: path
          name: course_uuid
          schema:
            type: string
            example: "cf1d83df-ff67-4b59-8a5e-d04c53709268"
          required: true
      responses:
        "200":
          description: The invitation code of the course was obtained.
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "AXH013"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "404":
          description: No course with the given "course_uuid" was found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /courses/join/{invitation-code}: 
    post: 
      tags: 
        - Courses
      security:
        - cookieAuth: []
      description: Join a course using an invitation code.
      parameters:
        - in: path
          name: invitation-code
          schema:
            type: string
            example: "8_JI4bFA7"
          required: true
      responses:
        "200": 
          description: The student joined the course successfully. 
          content: 
            application/json: 
              schema: 
                type: object
                properties: 
                  course:
                    allOf:
                      - $ref: "#/components/schemas/public_course_fields"
        "400":
          description: The invitation code is not valid. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "404":
          description: TNo course with the given invitation code was found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /courses/{course_uuid}/name:
    patch:
      tags:
        - Courses
      security:
        - cookieAuth: []
      description: Update the name of the give course. Note that the course's name can only be updated by the teacher who created the course.
      parameters:
        - in: path
          name: course_uuid
          schema:
            type: string
            example: "cf1d83df-ff67-4b59-8a5e-d04c53709268"
          required: true
      responses:
        "204":
          description: The name was updated successfully.
        "400":
          description: The name is empty or isn't valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /courses/{course_uuid}/visibility:
    patch:
      tags:
        - Courses
      security:
        - cookieAuth: []
      description: Toggle the course visibility for the owner of the session.
      parameters:
        - in: path
          name: course_uuid
          schema:
            type: string
            example: "cf1d83df-ff67-4b59-8a5e-d04c53709268"
          required: true
      responses:
        "200":
          description: The visibility was toggled successfully. 
          content: 
            application/json: 
              schema: 
               type: object
               properties: 
                visible: 
                  type: boolean
                  example: false
        "400":
          description: The course UUID is not valid. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /courses/{course_uuid}/students:
    post: 
      tags:
        - Courses
      security:
        - cookieAuth: []
      description: Enroll an student to a course.
      parameters:
        - in: path
          name: course_uuid
          schema:
            type: string
            example: "cf1d83df-ff67-4b59-8a5e-d04c53709268"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                student_uuid:
                  type: string
                  example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
      responses: 
        "204":
          description: The student was enrolled to the course. 
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    get:
      tags:
        - Courses
      security:
        - cookieAuth: []
      description: List the students enrolled in a class.
      parameters:
        - in: path
          name: course_uuid
          schema:
            type: string
            example: "cf1d83df-ff67-4b59-8a5e-d04c53709268"
          required: true
      responses:
        "200":
          description: The students are listed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items:
                      $ref: "#/components/schemas/public_user_fields"
        "400":
          description: The course UUID is not valid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /courses/{course_uuid}/students/{student_uuid}/status:
    patch:
      tags:
        - Courses
      security:
        - cookieAuth: []
      description: Unroll the student from the course.
      parameters:
        - in: path
          name: course_uuid
          schema:
            type: string
            example: "cf1d83df-ff67-4b59-8a5e-d04c53709268"
          required: true
        - in: path
          name: student_uuid
          schema:
            type: string
            example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                to_active:
                  type: boolean
                  example: False
      responses:
        "204":
          description: The student status was updated to active / inactive.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /courses/{course_uuid}/laboratories:
    get:
      tags:
        - Courses
      security:
        - cookieAuth: []
      description: Get the laboratories for the given course.
      parameters:
        - in: path
          name: course_uuid
          schema:
            type: string
            example: "cf1d83df-ff67-4b59-8a5e-d04c53709268"
          required: true
      responses:
        "200":
          description: The laboratories were obtained successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      $ref: "#/components/schemas/public_laboratory_fields"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  # Languages
  /languages: 
    get: 
      tags:
        - Languages
      security:
        - cookieAuth: []
      description: Get the list of supported languages and its UUIDs. 
      responses:
        "200":
          description: The languages are listed
          content: 
            application/json: 
              schema: 
                type: object
                properties:
                  languages: 
                    type: array
                    items:
                      type: object
                      allOf:
                        - $ref: "#/components/schemas/language"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /languages/{language_uuid}/template: 
    get: 
      tags:
        - Languages
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: language_uuid
          schema:
            type: string
            example: "c3049450-d1cc-424f-a06b-9b3e5c916319"
          required: true
      description: Get `.zip` archive with the template for the given language
      responses:
        "200":
          description: The `.zip` archive is retrieved / downloaded
          content: 
            application/zip:
              schema:
                type: string
                format: binary
        "404":
          description: No template found with the given UUID. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  # Laboratories
  /laboratories: 
    post:
      tags:
        - Laboratories
      security:
        - cookieAuth: []
      description: Update laboratory information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_laboratory_req"
      responses:
        "201":
          description: The laboratory was created
          content: 
            application/json: 
              schema: 
                type: object
                properties:
                  uuid: 
                    type: string
                    example: "f1b3f54f-1455-451c-8983-a2e002f90876"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /laboratories/{laboratory_uuid}:
    get: 
      tags: 
        - Laboratories
      security:
        - cookieAuth: []
      description: Get laboratory. 
      parameters:
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "1f071796-c01b-458b-8949-665592d90986"
          required: true
      responses: 
        "200": 
          description: The laboratory information was retrieved successfully. 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/laboratory"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "404":
          description: No laboratory found with the given UUId. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    put:
      tags:
        - Laboratories
      security:
        - cookieAuth: []
      description: Update laboratory information.
      parameters:
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "1f071796-c01b-458b-8949-665592d90986"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/update_laboratory_req"
      responses:
        "204":
          description: The laboratory information was updated
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /laboratories/{laboratory_uuid}/information: 
    get: 
      tags: 
        - Laboratories
      security:
        - cookieAuth: []
      description: Get the information of the given laboratory. Sames as `/laboratories/{laboratory_uuid}` but without the blocks to save bandwidth. 
      parameters:
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "1f071796-c01b-458b-8949-665592d90986"
          required: true
      responses: 
        "200": 
          description: The laboratory information was retrieved successfully. 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/laboratory_information"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "404":
          description: No laboratory found with the given UUId. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /laboratories/markdown_blocks/{laboratory_uuid}:
    post:
      tags:
        - Laboratories
      security:
        - cookieAuth: []
      description: Add a new markdown block to the given laboratory.
      parameters:
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "e6341b0d-e959-4081-b30a-38b5beb31096"
          required: true
      responses:
        "201":
          description: The markdown block was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    example: "1420737f-9a9f-43cd-ae2b-13646b4c28e0"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /laboratories/test_blocks/{laboratory_uuid}:
    post:
      tags:
        - Laboratories
      security:
        - cookieAuth: []
      description: Add a new tests block to the given laboratory.
      parameters:
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "e6341b0d-e959-4081-b30a-38b5beb31096"
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/create_test_block_req"
      responses:
        "201":
          description: The test block was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    example: "dd5a2edf-8439-4fdc-97e8-6f0d45d6540a"
                  test_archive_uuid:
                    type: string
                    example: "67a56a2a-b7b8-4369-b726-7b387b49d64e"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /laboratories/{laboratory_uuid}/progress:
    get: 
      tags: 
        - Laboratories
      security:
        - cookieAuth: []
      description: Get information about the students' progress in the laboratory. 
      parameters:
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "1f071796-c01b-458b-8949-665592d90986"
          required: true
      responses: 
        "200": 
          description: The information about the progress was retrieved successfully. 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/laboratory_progress_metadata"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "404":
          description: No laboratory found with the given UUId. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /laboratories/{laboratory_uuid}/progress/{student_uuid}:
    get: 
      tags: 
        - Laboratories
      security:
        - cookieAuth: []
      description: Get information about the progress of an specific student.  
      parameters:
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "1f071796-c01b-458b-8949-665592d90986"
          required: true
        - in: path
          name: student_uuid
          schema:
            type: string
            example: "e66d2cff-9a50-47cd-8301-bdf479e6d80e"
          required: true
      responses: 
        "200": 
          description: The information about the progress of the student was retrieved successfully. 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/student_progress_metadata"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "404":
          description: No laboratory found with the given UUId. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  # Blocks
  /blocks/markdown_blocks/{block_uuid}:
    delete:
      tags:
        - Blocks
      security:
        - cookieAuth: []
      description: Deletes the given markdown block.
      parameters:
        - in: path
          name: block_uuid
          schema:
            type: string
            example: "1420737f-9a9f-43cd-ae2b-13646b4c28e0"
          required: true
      responses:
        "204":
          description: The markdown block was removed.
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /blocks/markdown_blocks/{block_uuid}/content:
    patch:
      tags:
        - Blocks
      security:
        - cookieAuth: []
      description: Update the content of the given markdown block.
      parameters:
        - in: path
          name: block_uuid
          schema:
            type: string
            example: "1420737f-9a9f-43cd-ae2b-13646b4c28e0"
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                markdown:
                  type: string
                  example: "# Markdown title"
      responses:
        "204":
          description: The content of the markdown block was updated.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /blocks/test_blocks/{block_uuid}:
    put:
      tags:
        - Blocks
      security:
        - cookieAuth: []
      description: Update the given test block.
      parameters:
        - in: path
          name: block_uuid
          schema:
            type: string
            example: "dd5a2edf-8439-4fdc-97e8-6f0d45d6540a"
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/create_test_block_req"
      responses:
        "204":
          description: The content of the markdown block was updated.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

    delete:
      tags:
        - Blocks
      security:
        - cookieAuth: []
      description: Deletes the given test block.
      parameters:
        - in: path
          name: block_uuid
          schema:
            type: string
            example: "dd5a2edf-8439-4fdc-97e8-6f0d45d6540a"
          required: true
      responses:
        "204":
          description: The test block was removed.
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /blocks/swap_index: 
    patch: 
      tags:
          - Blocks
      security:
        - cookieAuth: []
      description: swap the index / order of the given two blocks. 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_block_uuid: 
                  type: string
                  example: '31dc456e-431b-4eac-a749-ae40ed1b6297'
                second_block_uuid: 
                  type: string
                  example: '60b88902-0aa5-4189-b339-6c546d938c02'
      responses:
        "204":
          description: The index / order of the given blocks were successfully swapped. 
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "404":
          description: A block with (at least) one of the given UUIDs were not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  # Rubrics
  /rubrics:
    post:
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      description: Creates a new rubric.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_rubric_req"
      responses:
        "201":
          description: The rubric was created
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    example: "d97700fc-0888-4bb5-8c86-2f229b8dd0af"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    get:
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      description: Get the rubrics created by the teacher.
      responses:
        "200":
          description: The rubrics were listed
          content:
            application/json:
              schema:
                type: object
                properties:
                  rubrics:
                    type: array
                    items:
                      $ref: "#/components/schemas/public_rubric_fields"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /rubrics/{rubric_uuid}:
    get:
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: rubric_uuid
          schema:
            type: string
            example: "d97700fc-0888-4bb5-8c86-2f229b8dd0af"
          required: true
      description: Get content of the given rubric.
      responses:
        "200":
          description: The content of the rubric was retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: "Rubric was retrieved"
                  rubric: 
                    allOf:
                      - $ref: "#/components/schemas/rubric"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
    delete: 
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: rubric_uuid
          schema:
            type: string
            example: "d97700fc-0888-4bb5-8c86-2f229b8dd0af"
          required: true
      description: Delete the given rubric. 
      responses:
        "204":
          description: The rubric was deleted.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /rubrics/{rubric_uuid}/name:
    patch: 
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: rubric_uuid
          schema:
            type: string
            example: "d97700fc-0888-4bb5-8c86-2f229b8dd0af"
          required: true
      description: Update name of the given rubric. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_rubric_req"
      responses: 
        "204": 
          description: The rubric name was updated successfully
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /rubrics/{rubric_uuid}/objectives:
    post:
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: rubric_uuid
          schema:
            type: string
            example: "d97700fc-0888-4bb5-8c86-2f229b8dd0af"
          required: true
      description: Add an objective to the given rubric.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_objective_req"
      responses:
        "201":
          description: The objective was added to the rubric.
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    example: "ba982a19-5f9a-4ebd-8b3c-66a6129d0327"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /rubrics/objectives/{objective_uuid}/criteria:
    post:
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: objective_uuid
          schema:
            type: string
            example: "ba982a19-5f9a-4ebd-8b3c-66a6129d0327"
          required: true
      description: Add a criteria to the given objective.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_criteria_req"
      responses:
        "201":
          description: The criteria was added to the objective.
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    example: "ba982a19-5f9a-4ebd-8b3c-66a6129d0327"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /rubrics/objectives/{objective_uuid}:
    put:
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: objective_uuid
          schema:
            type: string
            example: "ba982a19-5f9a-4ebd-8b3c-66a6129d0327"
          required: true
      description: Updates an objective.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_objective_req"
      responses:
        "204":
          description: The objective was updated.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    delete: 
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: objective_uuid
          schema:
            type: string
            example: "ba982a19-5f9a-4ebd-8b3c-66a6129d0327"
          required: true
      description: Deletes an objective.
      responses:
        "204":
          description: The objective was deleted.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"

  /rubrics/criteria/{criteria_uuid}:
    put:
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: criteria_uuid
          schema:
            type: string
            example: "ba982a19-5f9a-4ebd-8b3c-66a6129d0327"
          required: true
      description: Updates a criteria.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/create_criteria_req"
      responses:
        "204":
          description: The criteria was updated.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    delete: 
      tags:
        - Rubrics
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: criteria_uuid
          schema:
            type: string
            example: "ba982a19-5f9a-4ebd-8b3c-66a6129d0327"
          required: true
      description: Deletes a criteria.
      responses:
        "204":
          description: The criteria was deleted.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
                
  # Submissions
  /submissions/{test_block_uuid}/status:
    get:
      tags:
        - Submissions
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: test_block_uuid
          schema:
            type: string
            example: "dd5a2edf-8439-4fdc-97e8-6f0d45d6540a"
          required: true
      description: Get the details / metadata of the student's submission for the given test block
      responses: 
        "200": 
          description: The laboratory information was retrieved successfully. 
          content: 
            text/event-stream: 
              schema: 
                $ref: "#/components/schemas/submission_metadata"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "404":
          description: The student doesn't have any submission for the given test block.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /submissions/{test_block_uuid}:
    post:
      tags: 
        - Submissions
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: test_block_uuid
          schema:
            type: string
            example: "dd5a2edf-8439-4fdc-97e8-6f0d45d6540a"
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/create_submission_req"
      description: Submit a `.zip` archive to a test block. 
      responses: 
        "201": 
          description: The `.zip` archive was submitted. 
          content: 
            application/json: 
              schema:
                type: object
                properties:
                  uuid: 
                    type: string
                    example: "325fbfa1-bd9b-4846-8fdd-8383b0e1f857"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    
  # Grades
  /grades/{student_uuid}/{laboratory_uuid}/{rubric_uuid}: 
    get:
      tags: 
        - Grades
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: student_uuid
          schema:
            type: string
            example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
          required: true
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "a9be2f1e-e0e9-4b8d-9f72-6ed55ea5b1b8"
          required: true
        - in: path
          name: rubric_uuid
          schema:
            type: string
            example: "3fc29baf-9517-430c-9048-0f85599b61b7"
          required: true
      description: Get the grade of the given student for the given laboratory calculated by using the given rubric. 
      responses: 
        "200": 
          description: The grade was obtained successfully. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/student_grade_response"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    put:
      tags: 
        - Grades
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: student_uuid
          schema:
            type: string
            example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
          required: true
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "a9be2f1e-e0e9-4b8d-9f72-6ed55ea5b1b8"
          required: true
        - in: path
          name: rubric_uuid
          schema:
            type: string
            example: "3fc29baf-9517-430c-9048-0f85599b61b7"
          required: true
      description: Select / deselect a criteria to be added to the student's grade. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/select_criteria_to_grade_req"
      responses: 
        "201": 
          description: The criteria was successfully selected.
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
  
  /grades/laboratory/{laboratory_uuid}: 
    get: 
      tags: 
        - Grades
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: laboratory_uuid
          schema:
            type: string
            example: "a9be2f1e-e0e9-4b8d-9f72-6ed55ea5b1b8"
          required: true
      description: Get the existing grades of students for an specific laboratory. 
      responses: 
        "200": 
          description: The grades were obtained successfully. 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/students_grades_list_response"
        "400":
          description: Required fields were missed or doesn't fulfill the required format.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "403":
          description: The session token isn't valid or the user doesn't have enough permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
        "500":
          description: There was an unexpected error in the server side.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/default_error_response"
    
  
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access_token

  schemas:
    # Requests
    create_account_req:
      type: object
      properties:
        fullname:
          type: string
          example: "Pedro Chaparro"
        email:
          type: string
          example: "pedrochaparro@upb.edu.co"
        institutional_id:
          type: string
          example: "000371272"
        password:
          type: string
          example: "password2023*/"

    update_password_req:
      type: object
      properties:
        old_password:
          type: string
          example: "password2023*/"
        new_password:
          type: string
          example: "password2024*/"
    
    update_profile_req:
      type: object
      properties:
        full_name: 
          type: string
          example: "Pedro Chaparro"
        email: 
          type: string
          example: "pedrochaparro@upb.edu.co"
        institutional_id:
          type: string
          example: "000371272"
        password:
          type: string
          example: "password2023*/"
    
    create_laboratory_req: 
      type: object
      properties:
        course_uuid:
          type: string
          example: "229e3b99-93b4-47e7-83d2-0d0471fc2261"
        name:
          type: string
          example: "Lab 1. Lista simplemente enlazada"
        opening_date:
          type: string 
          example: "2023-12-01T12:00"
        due_date:
          type: string
          example: "2023-12-02T00:00"

    update_laboratory_req:
      type: object
      properties:
        name:
          type: string
          example: "Lab 1. Lista simplemente enlazada"
        opening_date:
          type: string 
          example: "2023-12-01T12:00"
        due_date:
          type: string
          example: "2023-12-02T00:00"
        rubric_uuid: 
          type: string
          example: "3fc29baf-9517-430c-9048-0f85599b61b7"

    create_test_block_req:
      type: object
      properties:
        block_name:
          type: string
          example: "Test métodos de la lista simplemente enlazada"
        language_uuid:
          type: string
          example: "a7c4c843-c3ef-4083-8255-927aea3af77f"
        test_archive:
          type: string
          format: binary # A `.zip` archive

    create_rubric_req:
      type: object
      properties:
        name:
          type: string
          example: "Rúbrica Estructuras de Datos"

    create_objective_req:
      type: object
      properties:
        description:
          type: string
          example: "Desarrollo de métodos para la estructura de datos planteada"

    create_criteria_req:
      type: object
      properties:
        description:
          type: string
          example: "Se evidencia desarrollo de, al menos, el 75% de los métodos solicitados para la estructura de datos planteada"
        weight:
          type: number
          example: 0.20
    
    create_submission_req:
      type: object
      properties:
        submission_archive: 
          type: string
          format: binary # A `.zip` archive
      
    credentials:
      type: object
      properties:
        institutional_id:
          type: string
          example: "000371272"
        password:
          type: string
          example: "password2023*/"

    select_criteria_to_grade_req:
      type: object
      allOf:
        - $ref: "#/components/schemas/selected_criteria_in_grade"
        

    # Responses
    default_error_response:
      type: object
      properties:
        error:
          type: boolean
          example: false
        message:
          type: string
          example: "Something went wrong. Try again later."
          
    session_user_fields: 
      type: object
      properties: 
        uuid:
          type: string
          example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
        full_name: 
          type: string
          example: "Pedro Chaparro"
        role: 
          type: string
          example: "student"
    
    account_profile_response: 
      type: object
      properties: 
        full_name: 
          type: string
          example: "Pedro Chaparro"
        email: 
          type: string
          example: "pedrochaparro@upb.edu.co"
        institutional_id:
          type: string
          example: "000371272"

    public_user_fields:
      type: object
      properties:
        uuid:
          type: string
          example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
        institutional_id:
          type: string
          example: "000371272"
        fullname:
          type: string
          example: "Pedro Chaparro"
  
    public_admins_fields:
      properties:
        uuid:
          type: string
          example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
        fullname:
          type: string
          example: "Pedro Chaparro"
        created_at:
          type: string
          example: "2023-09-25T23:37:52.155652Z"
    
    public_student_fields: 
      properties: 
        uuid:
          type: string
          example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
        fullname:
          type: string
          example: "Pedro Chaparro"
        institutional_id: 
          type: string
          example: "000371272"

    public_course_fields:
      type: object
      properties:
        uuid:
          type: string
          example: "cf1d83df-ff67-4b59-8a5e-d04c53709268"
        name:
          type: string
          example: "Estructuras de datos NRC 47158"
        color:
          type: string
          description: "A randomly chosen hexadecimal color"
          example: "#34d399"

    public_laboratory_fields:
      type: object
      properties:
        uuid:
          type: string
          example: "e1887258-17ad-46d9-bd2b-35859c60bcbe"
        name:
          type: string
          example: "Lab 1. Lista simplemente enlazada"
        opening_date:
          type: string # To be defined
          example: "04/09/2023 08:00"
        due_date:
          type: string # To be defined
          example: "10/09/2023 23:59"

    public_rubric_fields:
      type: object
      properties:
        uuid:
          type: string
          example: "d97700fc-0888-4bb5-8c86-2f229b8dd0af"
        name:
          type: string
          example: "Rúbrica Estructuras de Datos"

    rubric:
      type: object
      properties:
        name:
          type: string
          example: "Rúbrica Estructuras de Datos"
        objectives:
          type: array
          items:
            $ref: "#/components/schemas/rubric_objective"

    rubric_objective:
      type: object
      properties:
        uuid:
          type: string
          example: "ba982a19-5f9a-4ebd-8b3c-66a6129d0327"
        name:
          type: string
          example: "Desarrollo de la Estructura de Datos planteada"
        criteria:
          type: array
          items:
            $ref: "#/components/schemas/rubric_criteria"

    rubric_criteria:
      type: object
      properties:
        uuid:
          type: string
          example: "1f494edc-7649-44ed-afa1-816dede2854a"
        description:
          type: string
          example: "Desarrolló la totaliadad de métodos para la estructura de datos planteada"
        value:
          type: number
          example: 0.25
    
    student_grade_response: 
      type: object
      properties: 
        grade:
          type: number
          example: 0.25
        comment: 
          type: string
          example: "This is a comment made by the teacher :D"
        selected_criteria: 
          type: array
          items: 
            $ref: "#/components/schemas/selected_criteria_in_grade"
          
    students_grades_list_response:
      type: object
      properties: 
        grades: 
          type: array
          items: 
            type: object
            properties: 
              student_uuid: 
                type: string
                example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
              student_full_name: 
                type: string
                example: "Pedro Chaparro"
              grade: 
                type: number
                example: 0.25
    
    
    # Entities
    selected_criteria_in_grade: 
      type: object
      properties: 
        objective_uuid: 
          type: string
          example: "ba982a19-5f9a-4ebd-8b3c-66a6129d0327"
        criteria_uuid: 
          type: string
          example: "1f494edc-7649-44ed-afa1-816dede2854a"
    
    language: 
      type: object
      properties: 
        uuid: 
          type: string
          example: "c3049450-d1cc-424f-a06b-9b3e5c916319"
        name: 
          type: string
          example: "Java"
    
    markdown_block: 
      type: object
      properties: 
        uuid: 
          type: string
          example: "31dc456e-431b-4eac-a749-ae40ed1b6297"
        content: 
          type: string
          example: "# Main title"
        order: 
          type: number
          example: 0
    
    test_block: 
      type: object
      required: ["uuid", "language_uuid", "test_archive_uuid", "name", "order"]
      properties: 
        uuid: 
          type: string
          example: "60b88902-0aa5-4189-b339-6c546d938c02"
        language_uuid: 
          type: string
          example: "c3049450-d1cc-424f-a06b-9b3e5c916319"
        test_archive_uuid:
          type: string
          example: "7f5e5fd3-ad44-4441-8201-cfab68ed1e00"
        # (Optional) The UUID of the student' submission
        submission_uuid:
          type: string
          example: "962022d9-8a0a-4686-b10e-fca700601772"
        name: 
          type: string
          example: "Doubly Linked List Methods"
        order: 
          type: number
          example: 1
    
    laboratory_information:   
      type: object
      properties: 
        uuid: 
          type: string
          example: "a9be2f1e-e0e9-4b8d-9f72-6ed55ea5b1b8"
        rubric_uuid: 
          type: string
          example: "3fc29baf-9517-430c-9048-0f85599b61b7"
        name: 
          type: string
          example: "Doubly Linked List"
        opening_date: 
          type: string
          example: "2023-12-01T12:00"
        due_date: 
          type: string
          example: "2023-12-02T00:00"
          
    laboratory: 
      allOf:
        - $ref: "#/components/schemas/laboratory_information"
        - type: object
          properties: 
            markdown_blocks: 
              type: array
              items:
                type: object
                allOf:
                  - $ref: "#/components/schemas/markdown_block"
            test_blocks: 
              type: array
              items:
                type: object
                allOf:
                  - $ref: "#/components/schemas/test_block"
    
    laboratory_progress_metadata:
      type: object
      properties:
        total_test_blocks: 
          type: number
          example: 8
        progress: 
          type: array
          items: 
            type: object
            properties: 
              student_uuid: 
                type: string
                example: "b0c553b3-ddb2-4392-9d94-b31d8c9c4a84"
              student_full_name: 
                type: string
                example: "Pedro Chaparro"
              pending_submissions:
                type: number
                example: 0
              running_submissions:
                type: number
                example: 1
              failing_submissions: 
                type: number
                example: 1
              success_submissions: 
                type: number
                example: 2
    
    submission_metadata:
      type: object
      properties: 
        submission_uuid: 
          type: string
          example: "2c8d6612-09f5-47d5-b55d-b2f3c26c4ba9"
        tests_passed:
          type: boolean
          example: true
        submission_status: 
          type: string
          enum: ["pending", "running", "ready"]
          example: "running"
        tests_output: 
          type: string
          example: "[ERROR] SinglyLinkedList.addTest(): Expected 1 received 0"
    
    student_progress_metadata:
      type: object
      properties: 
        total_test_blocks: 
          type: number
          example: 8
        passing_submissions:
          type: number
          example: 4
        submissions: 
          type: array
          items: 
            $ref: "#/components/schemas/student_submission_metadata"
    
    student_submission_metadata: 
      type: object
      properties: 
        uuid: 
          type: string
          example: "2c8d6612-09f5-47d5-b55d-b2f3c26c4ba9"
        archive_uuid: 
          type: string
          example: "3ddd8d16-157d-409a-b65a-390f7ac5550c"
        test_block_name:
          type: string
          example: "Doubly Linked List Methods"
        passing: 
          type: boolean
          example: True